---
title: "Variables en Estadística"
subtitle: "Conceptos Clave de Variables"
format: 
    live-revealjs: 
        scrollable: true
webr:
    packages: 
        - dplyr
# pyodide: 
#     packages: 
#         - scikit-learn
#         - pandas
#         - matplotlib
#         - seaborn
#         - statsmodels
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Introducción

- En ciencia, para poner a prueba hipótesis, medimos variables, que son elementos que pueden cambiar. 
- Estas variables pueden diferir entre personas de una misma población (como la altura), entre lugares (como el desempleo), o con el tiempo (como el estado de ánimo). 
- Generalmente, las hipótesis se expresan en términos de dos variables: una causa propuesta y un resultado propuesto.

---

## Conceptos Clave

- Variable Independiente: Esta es la variable que se considera la causa; su valor no depende de otras variables. En términos experimentales, es la que se manipula para observar su efecto sobre otra variable.

- Variable Dependiente: Esta es la variable que se piensa es afectada por cambios en la variable independiente. Es el resultado que se mide en el experimento.

- Variable Predictora y de Resultado: En investigaciones donde no se manipulan variables directamente, los términos "variable independiente" y "variable dependiente" pueden no ser adecuados. En su lugar, se usan los términos "variable predictora" (equivalente a la independiente) y "variable de resultado" (equivalente a la dependiente). Esta terminología es útil en estudios donde una o más variables se utilizan para predecir el resultado.
- Por ejemplo, en un experimento, puedes examinar el efecto de horas de estudio (variable predictora) sobre la calificación de un examen (variable de resultado).

---



# Tipos de Variables

## Introducción

Las variables pueden clasificarse en diferentes tipos, que nos ayudan a comprender y analizar adecuadamente los datos en estadística.

##
- Variables Categóricas:
  - Nominales: Estas no tienen un orden específico. Por ejemplo, nombre de especies de animales.
  - Ordinales: Tienen un orden, pero no proporcionan información sobre las diferencias entre categorías. Por ejemplo, puesto en una carrera (primero, segundo, tercero), o descripciones en una escala psicológica (feliz, neutro, triste).
  - Binarias: Solo tienen dos categorías excluyentes. Por ejemplo, vivo o muerto.
- Observa la siguiente imagen que ilustra estos conceptos:

![](http://orcaasesina.com/wp-content/uploads/2024/10/38f5ed46-9dcd-4981-9ae0-497fb20aa65c_rw_1920.png)

##
- Variables Continuas: estas pueden tomar cualquier valor dentro de un rango específico. Por ejemplo, la altura, el peso, la temperatura, etc.
- Discretas: Solo pueden tomar ciertos valores específicos. Por ejemplo, número de hijos, que siempre es un número entero.

![](http://orcaasesina.com/wp-content/uploads/2024/10/5c0b4bea-b51d-42cb-b0bb-1bc1d59ac0c5_rw_1920.png)

## Ejercicio Práctico en R: Trabajando con Diferentes Tipos de Variables

- Como veremos en lo que resta del curso, es importante entender qué tipo de variable estamos tratando para elegir el método de análisis adecuado.
- Identifica los diferentes tipos de variables que tenemos en el siguiente conjunto de datos:
- Los datos ya se encuentran cargados en el ejercicio en la variable `datos_tipos_variables`
- Primero, vamos a explorar los datos con la función `head()` para ver las primeras filas.


```{webr}
#| include: false
#| autorun: true
library(ggplot2)

# Datos simulados
set.seed(123)
resultado_examen <- factor(c("Fail", "Pass", "Merit", "Distinction"), ordered = TRUE)
estado_civil <- factor(c("Soltero", "Casado", "Divorciado", "Viudo"))
vivo_muerto <- factor(c("Vivo", "Muerto"), levels = c("Vivo", "Muerto"))
temperatura <- rnorm(100, mean=22, sd=5)  # Variable de intervalo
anxiety_score <- runif(100, min=0, max=21)  # Variable de razón

datos_tipos_variables <- data.frame(
  ID = 1:100,
  Resultado_Examen = sample(resultado_examen, 100, replace = TRUE),
  Estado_Civil = sample(estado_civil, 100, replace = TRUE),
  Vivo_Muerto = sample(vivo_muerto, 100, replace = TRUE),
  Temperatura = temperatura,
  Anxiety_Score = anxiety_score
)

```


```{webr}
#| autorun: true

head(datos_tipos_variables)

```


##
- A dimple vista, podemos determinar lo siguiente:
- `ID`: Es una variable discreta.
- `Resultado_Examen`: Es una variable categórica ordinal.
- `Estado_Civil`: Es una variable categórica nominal.
- `Vivo_Muerto`: Es una variable categórica binaria.
- `Temperatura`: Es una variable continua.
- `Anxiety_Score`: Es una variable continua.

Sin embargo, existen diferentes formas de explorar los tipos de datos con diferentes funciones en R.

## str()
- Podemos usar la función `str()` para obtener una descripción de las variables en el conjunto de datos.
- Esta función nos proporciona información sobre el tipo de variable y los primeros valores de cada columna.


```{webr}
#| autorun: true

str(datos_tipos_variables)

```

##
- Observa que nos dice:
- El número de observaciones (100).
- El número de variables (6).
- El nombre de las variables.
- ID es identificada como un número entero (Int que significa integer).
- Resultado_Examen, Estado_Civil y Vivo_Muerto son factores. Los factores son variables categóricas. También nos muestra los niveles de cada factor, que son las categorías o valores que puede tomar la variable. Por ejemplo, Resultado_Examen tiene 4 niveles: Fail, Pass, Merit, Distinction. La palabra Ord. significa que es una variable ordinal.
- Las variables Temperatura y Anxiety_Score son numéricas (num).

## summary()
- Esta función nos proporciona un resumen de las variables en el conjunto de datos.
- Observa que para las variables categóricas, nos muestra la frecuencia de cada nivel, es decir, cuántas veces aparece cada categoría en el conjunto de datos.
- Para las variables numéricas, nos muestra un resumen estadístico, incluyendo la media, la mediana, los cuartiles, el mínimo y el máximo.

```{webr}
#| autorun: true

summary(datos_tipos_variables)

```

## glimpse()

- Podemos usar la función `glimpse()` del paquete `dplyr` para obtener un resumen de las variables en el conjunto de datos.
- Una ventaja de ver los datos con esta función es que nos muestra el tipo de variable que R ha asignado a cada columna.
- NOTa: en esta presentación no se alcanza a visualizar la salida completa de la función `glimpse()`, pero en tu computadora podrás verla completa.

```{webr}
#| autorun: true
library(dplyr)
datos_tipos_variables %>% glimpse()

```

## sapply() y class()
- sapply() es una función que aplica una función a cada elemento de una lista o vector.
- class() es una función que nos permite obtener el tipo de variable de un objeto en R.
- Podemos usar sapply() con class() para obtener el tipo de variable de cada columna en el conjunto de datos.

```{webr}
#| autorun: true

sapply(datos_tipos_variables, class)

```


## Cambiando el Tipo de Variable
- A veces, necesitamos cambiar el tipo de variable de una columna en un conjunto de datos.
- Por ejemplo, si una variable categórica se ha leído como numérica, necesitamos cambiarla.

```{webr}
#| autorun: true

# Cambiar la variable ID a factor con recode

datos_nuevos <- datos_tipos_variables %>%
  mutate(ID = as.factor(ID))

str(datos_nuevos)

```

# Fin