---
title: "Distribuciones de Probabilidad"
subtitle: "Distrbución Normal y cómo visualizarla en R, primeros pasos con ggplot2"
author:
  - name: "Mtro. Santiago Ríos"
    email: santiagoboo99@gmail.com
    affiliation: 
      - name: Cursos Or ca
        city: CDMX
        url: orcaasesina.com
title-slide-attributes:
  data-background-image: "https://r-charts.com/en/miscellaneous/brickr_files/figure-html/brickr.png"
  data-background-size: contain
  data-background-opacity: "0.5"
format: 
    live-revealjs: 
        theme: serif
        scrollable: true
        progress: true
        slide-number: true
        incremental: true
        lang: es
        logo: "https://cran.r-project.org/Rlogo.svg"
webr:
    packages: 
        - ggplot2
        # - plotly
        # - tweenr
# pyodide: 
#     packages: 
#         - scikit-learn
#         - pandas
#         - matplotlib
#         - seaborn
#         - statsmodels
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Introducción y Objetivos {.smaller}

::: {.incremental}
- Antes de comenzar con las lecciones de estadística, es importante entender las **distribuciones de probabilidad**.
- Las *distribuciones de probabilidad* describen cómo se distribuyen los valores posibles de una variable aleatoria. Estas representan la probabilidad de los valores que puede tomar una variable, siendo algunos valores más probables que otros.
- Una variable aleatoria es una variable cuyos valores son el resultado de un fenómeno aleatorio, como el lanzamiento de un dado o la altura de una persona.
- En esta lección, abordaremos algunas de las distribuciones más comunes y cómo trabajarlas en R.
- Para ello, nos enfocaremos en un ejemplo fictício de alturas de jirafas "miniatura" en 2 diferentes islas.

:::

## {.smaller}

Imagina que tomas *aleatoriamente* la altura de 100 jirafas: 50 pertenecienctes a la isla A y 50 a la isla B, como se muestra en las imágenes. 


![Isla A e Isla B](https://tinystats.github.io/teacups-giraffes-and-statistics/images/02_bellCurve/giraffe_islands2.jpg)


![Toma de alturas de jirafas miniatura](https://tinystats.github.io/teacups-giraffes-and-statistics/images/02_bellCurve/giraffe_lineup4.jpg)



::: {.footer}
Gráficos por tinystats. Puedes revisar su módulo en [este enlace](https://tinystats.github.io/teacups-giraffes-and-statistics/02_bellCurve.html) si deseas profundizar en el tema.
:::


## {.smaller}

::: {.incremental}
- ¿Cómo podemos visualizar los 100 datos para ver cuál es la altura más común, la menos común y el rango de las alturas?
- Una forma practica sería la siguiente: tomas la altura de cada jirafa y llevas un conteo de cuántas veces se repite cada altura (**frecuencia**).
- Para simplificar este conteo, vamos a redondear las alturas a números enteros (por ejemplo, 6 cm, 7 cm, 8 cm, etc.).
- Esta es la base de un gráfico conocido como **histograma**, que muestra la distribución de los datos. Como verás, hay valores que se repiten más que otros, lo que se observa como picos en el gráfico.
- Ejecuta el código de la siguiente diapositiva y observa cómo se va construyendo el histograma. Cada "bolita" que aparece en el gráfico representa un dato de altura. Si hay más de un dato para esa altura, se apila para llevar el conteo o frecuencia. No te preocupes por el código, solo observa el gráfico.
- NOTA: Puedes hacer clic en el botón de reproducción para ver la animación. Después de ejecutar el código, tarda unos segundos en cargar la animación.

:::


##

::: {.panel-tabset}

## Gráfico

```{webr}
histograma_plot

```

## Código usado para el gráfico


```{webr}
#| autorun: true

library(plotly)
library(tweenr)

set.seed(12)
x <- round(rnorm(50, 10, 2))
x2 <- round(rnorm(50, 18, 1.2))
x <- c(x, x2)
df <- data.frame(x = x, y = 23, type = rep(c("Isla #1", "Isla #2"), 
    each = 50))
dfs <- list(df)
for (i in seq_len(nrow(df)))
{
    dftemp <- tail(dfs, 1)
    dftemp[[1]]$y[i] <- sum(dftemp[[1]]$x[seq_len(i)] == dftemp[[1]]$x[i])
    dfs <- append(dfs, dftemp)
}
dfs <- append(dfs, dfs[rep(length(dfs), 3)])
dft <- tween_states(dfs, 10, 1, "cubic-in", 500)
dft$y <- dft$y - 0.5
dft <- dft[dft$y != 23, ]

m <- list(l = 50, r = 50, b = 10, t = 10, pad = 4)

histograma_plot <- 
  dft %>% 
  plot_ly(x = ~x, y = ~y, frame = ~.frame, color = ~type, 
          colors = c("green3", "turquoise3"), 
          marker = list(size = 16), width = 630, height = 390) %>%
  config(displayModeBar = F) %>%
  layout(xaxis = list(range = c(4, 23), title = "Altura de jirafas en cm", zeroline = F), 
         yaxis = list(range = c(-0.5, 21), title = "Frecuencia", zeroline = F), 
         legend = list(x = 0.075, y = 0.91), 
         autosize = F, margin = m) %>%
  animation_opts(frame = 25, transition = 0, redraw = FALSE) %>%
  animation_slider(hide = T) %>%
  animation_button(x = 1, xanchor = "right", y = 0, yanchor = "bottom")


```


:::

::: {.footer}
Gráficos por tinystats. Puedes revisar su módulo en [este enlace](https://tinystats.github.io/teacups-giraffes-and-statistics/02_bellCurve.html) si deseas profundizar en el tema.
:::

## {.smaller}

::: {.incremental}
- El grafico que acabamos de ver (**histograma**) muestra la *distribución* o forma de nuestros datos.
- A partir de la distribución de nuestra variable de altura, podemos observar lo siguiente:
    - Cuál es el valor mínimo y máximo de las alturas (`6-20 cm`). 
    - La altura más común es diferente para las firafas de la isla 1 y 2.
    - Hay una variabilidad en las alturas, con algunas jirafas más altas y otras más bajas.
:::

![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/02_bellCurve/normal_hist.png)

## {.smaller}

- Dependiendo de la forma de la distribución, se le da un nombre a esta distribución de los datos. La más común y utilizada es la **distribución normal**.
- Cada distribución tiene sus propias características y propiedades, lo que las hace únicas y útiles para diferentes situaciones.
- Exploremos las características de la distribución normal con nuestro ejemplo de alturas de jirafas. Estas características son:
    - Tiene un solo pico o punto más alto donde se concentran los datos.
      - NOTA: En nuestro gráfico se observan 2 picos, pero esto es porque estamos observando las alturas de 2 grupos de jirafas diferentes. Sin embargo, cada grupo tiene un único pico. 
    - Los datos se distribuyen simétricamente alrededor de este punto medio. 

## Reflexión {.smaller}

- Toma en cuenta que en nuestro ejemplo de las jirafas, es probable que no hayamos tomado las alturas de TODAS las jirafas de las islas.
- Por lo tanto, nuestro histograma es una *aproximación* de la verdadera distribución de alturas.
- Esta aproximación está basada en nuestro muestreo aleatorio de las alturas. Esto es común en la estadística, donde trabajamos con **muestras** de datos en lugar de la población completa.
- Existe la posibilidad de que nuestro muestreo no sea adecuado para representar la verdadera distribución de alturas en la población. Esto es un tema importante en la estadística y se conoce como **error de muestreo**.
- Debido a esto, es importante tomar una muestra lo suficientemente grande y representativa.

##

Para ilustrar este concepto, observa cómo cambia la forma del histograma al tomar muestras de diferentes tamaños de los datos de las jirafas. El siguiente gráfico muestra el histograma de las jirafas, asumiendo que realizamos un muestreo aleatorio de las alturas varias veces (cada cuadro del GIF representa un muestreo diferente, es decir, cada vez que vamos a la isla y tomamos la altura de N jirafas). En cada muestreo, el número de alturas de jirafas tomadas varía, denotado por la letra N, que indica el tamaño de la muestra. Observa cómo con una muestra pequeña, la forma del histograma cambia drásticamente, mientras que con una muestra grande, se mantiene constante y asemeja la forma de la distribución normal.

![](https://tinystats.github.io/teacups-giraffes-and-statistics/02_bellCurve_files/figure-html/unnamed-chunk-10-.gif)


## Describir los datos 

- Una vez que hemos visualizado la distribución de los datos, el siguiente paso es describir las alturas con medidas numéricas.
- Para esto, utilizamos las **medidas de tendencia central** y **dispersión**.
- Estas medidas nos ayudan a comprender tanto el "centro" de los datos como la "dispersión". 

## Medidas de Tendencia Central {.smaller}

- Las medidas de tendencia central nos ayudan a resumir la "ubicación" de los datos, en especial, dónde se concentran los datos. Las medidas más comunes son:
    - **Media**: el promedio de los datos.
    - **Mediana**: el valor que se encuentra en el centro de los datos.
    - **Moda**: el valor que se repite con mayor frecuencia.
- En una distribución normal ideal, la media, mediana y moda son iguales. Sin embargo, en la práctica, suelen ser diferentes, aunque cercanas.

![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/03_mean/mean_hist.png)

## Media {.smaller}
- La media es el promedio de todos los valores en un conjunto de datos.
- Se calcula sumando todos los valores y dividiendo por el número total de observaciones.
- Puede ser calculada fácilmente en R con la función `mean()`, la cuál podemos usar denrtro de las funciones de manipulación de datos de `dplyr` como ya hemos visto.
- Observa cómo calculmos la media de las alturas de las jirafas en el siguiente código. Nuestro dataframe se llama `alturas_df` (ya está cargado en la diapositiva) y tiene las columnas `altura` e `isla`.

```{webr}
#| include: false
#| autorun: true

library(dplyr)

set.seed(12)
x <- round(rnorm(50, 10, 2))
x2 <- round(rnorm(50, 18, 1.2))
x <- c(x, x2)
df <- data.frame(x = x, y = 23, type = rep(c("Isla #1", "Isla #2"), 
    each = 50))

alturas_df <- df %>%
  rename(altura = x, isla = type) 

```

```{webr}

alturas_df %>%
 group_by(isla) %>% # agrupamos por isla
 summarise(mean = mean(altura)) # calculamos la media de las alturas

```

![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/giraffe_variance1.jpg)


## NOTA
- Cuando nos referimos a la media, podemos hablar de la media poblacional o la media muestral.
- La media poblacional es el promedio de todos los valores en una población completa y se denota con el símbolo `μ` (mu). Esta media es desconocida en la práctica, ya que rara vez tenemos acceso a todos los datos de una población.
- La media muestral es el promedio de los valores en una muestra de la población y se denota con el símbolo `x̄` (x barra). Esta es la media que calculamos con nuestros datos y la que usamos para estimar la media poblacional.
- De manera similar, cuando nos referimos al tamaño de la población, usamos `N`, y cuando nos referimos al tamaño de la muestra, usamos `n`.

## Mediana {.smaller}
- La mediana es el valor que se encuentra en el centro de los datos cuando estos están ordenados de menor a mayor.
- Es una medida de tendencia central robusta, ya que no se ve afectada por valores extremos o atípicos.
- En R, podemos calcular la mediana con la función `median()`.

```{webr}

alturas_df %>%
 group_by(isla) %>% # agrupamos por isla
 summarise(median = median(altura)) # calculamos la mediana de las alturas

```

## Moda {.smaller}
- La moda es el valor que se repite con mayor frecuencia en un conjunto de datos.
- Puede haber más de una moda en un conjunto de datos, lo que se conoce como distribución multimodal.
- En R, podemos calcular la moda con la función `Mode()`.

```{webr}

Mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

alturas_df %>%
 group_by(isla) %>% # agrupamos por isla
 summarise(moda = Mode(altura)) # calculamos la moda de las alturas

mode <- function(variable){
  which.max(tabulate(variable))
}

alturas_df %>%
  group_by(isla) %>%
  summarise(mode = mode(altura))
```


## Medida de Dispersión {.smaller}
- Las medidas de dispersión nos ayudan a entender cuánto varían los datos alrededor de la media.
- Las medidas más comunes de dispersión son:
    - **Rango**: la diferencia entre el valor máximo y mínimo.
    - **Desviación Estándar**: mide cuánto se desvían los datos de la media.
    - **Rango Intercuartílico (IQR)**: la diferencia entre el tercer y primer cuartil.

![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/bells_edited-04.png)

## Varianza {.smaller}
- La varianza mide cuánto varían los datos alrededor de la media.
- Se calcula sumando las diferencias al cuadrado entre cada valor y la media, y luego dividiendo por el número total de observaciones.
- La varianza es una medida de dispersión cuadrática, ya que considera la magnitud de las diferencias al cuadrado. Esto se hace para evitar que las diferencias positivas y negativas se cancelen entre sí.
- En R, podemos calcular la varianza con la función `var()`.

```{webr}

alturas_df %>% 
  group_by(isla) %>% # agrupamos por isla
  summarise(varianza = var(altura)) # calculamos la varianza de las alturas

```

![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/giraffe_variance2.jpg)

## Rango {.smaller}
- El rango es la diferencia entre el valor máximo y mínimo en un conjunto de datos.
- Es una medida simple de dispersión, pero no considera la distribución de los datos.
- En R, podemos calcular el rango con las funciones `max()` y `min()`.

```{webr}

alturas_df %>%
 group_by(isla) %>% # agrupamos por isla
 summarise(rango = max(altura) - min(altura)) # calculamos el rango de las alturas

```

## Desviación Estándar {.smaller}

- El problema con la varianza es que está en unidades al cuadrado, lo que puede ser difícil de interpretar. Por eso, a menudo usamos la desviación estándar, que es la raíz cuadrada de la varianza.
- La desviación estándar mide cuánto se desvían los datos de la media.
- Es una medida de dispersión más robusta que el rango, ya que considera la distribución de los datos.
- En R, podemos calcular la desviación estándar con la función `sd()`.

```{webr}

alturas_df %>%
 group_by(isla) %>% # agrupamos por isla
 summarise(desviacion_estandar = sd(altura)) # calculamos la desviación estándar de las alturas

```

![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/giraffe_variance3.jpg)

## Significado de la Desviación Estándar {.smaller}
- La desviación estándar nos indica cuánto se desvían los datos de la media.
- Puede ser usada para predecir que tan raro o común es un valor en la distribución.
- Para una distribución normal, un 97.7% de los datos caen dentro de 3 desviaciones estándar de la media; un 95.4% caen dentro de 2 desviaciones estándar; y un 68.3% caen dentro de 1 desviación estándar.


![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/General_empirical.jpg)


## Tip para obtener todos los estadísticos {.smaller}
- Si deseas obtener todas las medidas de tendencia central y dispersión en un solo paso, puedes usar la función `summary()` en R.

```{webr}

alturas_df %>%
  group_by(isla) %>% # agrupamos por isla
  summarise(across(altura, 
                    list(mean = mean, 
                        median = median, 
                        Mode = Mode, 
                        varianza = var, 
                        rango = ~max(.) - min(.), 
                        desviacion_estandar = sd)))

alturas_df %>%
  group_by(isla) %>% # agrupamos por isla
  summarise(across(altura, 
                    list(mean = mean, 
                        median = median, 
                        varianza = var, 
                               n = n_distinct,
                        desviacion_estandar = sd)))

```



## inferencia
- La distribución normal es una de las más importantes en estadística y se utiliza en muchos campos, desde la ciencia de datos hasta la investigación científica.
- A partir de la distribución normal, podemos hacer inferencias sobre los datos, como estimar la probabilidad de que un valor caiga dentro de cierto rango o comparar dos grupos de datos.
- Además, la distribución normal es la base de muchos métodos estadísticos, como la regresión lineal y los intervalos de confianza.
- Adicionalmente, podemos describir la distribución normal con solo dos parámetros: la media y la desviación estándar.